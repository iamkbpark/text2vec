% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_LSA.R
\docType{class}
\name{LatentSemanticAnalysis}
\alias{LSA}
\alias{LatentSemanticAnalysis}
\title{LatentSemanticAnalysis}
\format{\code{\link{R6Class}} object.}
\usage{
LatentSemanticAnalysis

LSA
}
\description{
Creates LSA(Latent semantic analysis) model.
See \url{https://en.wikipedia.org/wiki/Latent_semantic_analysis} for details.
Model can be fitted with \link{fit}, \link{fit_transf} methods.
}
\details{
Latent Semantic Analysis model
}
\section{Methods}{

\describe{
  \item{\code{new(n_topics)}}{create LSA model with \code{n_topics} latent topics}
  \item{\code{fit(X)}}{fit model to an input DTM (preferably in "dgCMatrix" format)}
  \item{\code{fit_transf(X)}}{fit model to an input sparse matrix (preferably in "dgCMatrix"
   format) and then transform \code{X} to latent space}
  \item{\code{transf(X)}}{transform new data \code{X} to latent space}
}
}
\examples{
data("movie_review")
N = 100
tokens = movie_review$review[1:N] \%>\% tolower \%>\% word_tokenizer
dtm = create_dtm(itoken(tokens), hash_vectorizer())
n_topics = 10
lsa_1 = LatentSemanticAnalysis$new(n_topics)
fit(lsa_1, dtm) # or lsa_1$fit(dtm)
lsa_2 = LatentSemanticAnalysis$new(n_topics)
all.equal(lsa_2$fit_transf(dtm), lsa_1$transf(dtm))
# the same, but wrapped with S3 methods
all.equal(fit_transf(lsa_2, dtm), transf(lsa_1, dtm))
}
\keyword{datasets}

