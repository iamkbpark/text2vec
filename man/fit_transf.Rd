% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_LSA.R, R/models_interface.R
\name{fit_transf.LSA}
\alias{fit_transf}
\alias{fit_transf.LSA}
\title{Fit model to data, then transforms input}
\usage{
\method{fit_transf}{LSA}(object, X, ...)

fit_transf(object, X, ...)
}
\arguments{
\item{object}{instance of class \code{text2vec_model}. See \link{LatentSemanticAnalysis}.}

\item{X}{matrix like object. At the moment usually one of
\code{c("matrix", "dgCMatrix", "dgTMatrix", "lda_c")}}

\item{...}{arguments to underlying functions. Currently not used.}
}
\value{
Transformed version of \code{X}
}
\description{
This is generic function to fit text2vec models (class = "text2vec_model")
and then apply fitted object to input.
Note, that this function modifies input model during fitting! See example below.
}
\examples{
data("movie_review")
N = 100
tokens = movie_review$review[1:N] \%>\% tolower \%>\% word_tokenizer
dtm = create_dtm(itoken(tokens), hash_vectorizer())
n_factors = 10
model = LatentSemanticAnalysis$new(n_factors)
# model is mutable!
documents_latent_factors =  model$fit_transf(dtm)
documents_latent_factors_2 =  model$transf(dtm)
all.equal(documents_latent_factors, documents_latent_factors_2)
}

